subRChain("R11", "R12", "R10", "g").
def_subrc("R11", "R12", "R10").
subClass("C3", "C4", "g").
def_subclass("C3", "C4").
insta("ind1", "C1", "g", "main").
def_insta("ind1", "C1").
supForall("C12", "R6", "C13", "g").
def_supforall("C12", "R6", "C13").
insta("m1", "Module", "g", "main").
irr("R18", "g").
def_irr("R18").
subConj("C5", "C6", "C7", "g").
def_subcnj("C5", "C6", "C7").
supLeqOne("C14", "R7", "g").
def_supleqone("C14", "R7").
supEx("C10", "R5", "obj_ex", "g").
def_supex("C10", "R5", "obj_ex").
domain("hasModule", "Context", "g").
domain("hasAttribute", "Context", "g").
triplea("c1", "hasModule", "m1", "g", "main").
range("hasAttribute", "AttributeValue", "g").
dis("R15", "R16", "g").
def_dis("R15", "R16").
insta("strict", "AxiomType", "g", "main").
range("hasModule", "Module", "g").
ntriplea("i_npa1", "R3", "i_npa2", "g").
def_ntriplea("i_npa1", "R3", "i_npa2").
inv("R13", "R14", "g").
def_inv("R13", "R14").
subEx("R4", "C8", "C9", "g").
def_subex("R4", "C8", "C9").
insta("ind2", "C11", "g", "main").
def_insta("ind2", "C11").
insta("c1", "Context", "g", "main").
triplea("ind2", "R1", "ind3", "g", "main").
def_triplea("ind2", "R1", "ind3").
insta("defeasible", "AxiomType", "g", "main").
subRole("R8", "R9", "g").
def_subr("R8", "R9").
nom("m1", "g").
nom("i_npa2", "g").
nom("i_npa1", "g").
nom("c1", "g").
nom("obj_ex", "g").
nom("strict", "g").
nom("defeasible", "g").
nom("ind2", "g").
nom("ind3", "g").
nom("ind1", "g").
rol("R16", "g").
rol("R18", "g").
rol("hasModule", "g").
rol("R4", "g").
rol("hasAttribute", "g").
rol("R3", "g").
rol("R1", "g").
rol("R8", "g").
rol("R7", "g").
rol("R6", "g").
rol("R5", "g").
rol("R9", "g").
rol("R13", "g").
rol("R12", "g").
rol("R15", "g").
rol("R14", "g").
rol("R11", "g").
rol("R10", "g").
cls("C15", "g").
cls("AttributeValue", "g").
cls("C8", "g").
cls("C9", "g").
cls("C6", "g").
cls("C10", "g").
cls("C7", "g").
cls("Module", "g").
cls("C4", "g").
cls("C12", "g").
cls("C5", "g").
cls("C11", "g").
cls("C2", "g").
cls("C14", "g").
cls("C13", "g").
cls("C3", "g").
cls("C1", "g").
cls("AxiomType", "g").
cls("Context", "g").
instd(X, Z, C, T) :- insta(X, Z, C, T).
tripled(X, R, Y, C, T) :- triplea(X, R, Y, C, T).
unsat(T) :- ninsta(X, Z, C), instd(X, Z, C, T).
unsat(T) :- ntriplea(X, R, Y, C), tripled(X, R, Y, C, T).
unsat(T) :- eq(X, Y, C, T).
instd(X, "top", C, "main") :- nom(X, C).
unsat(T) :- instd(X, "bot", C, T).
instd(X, Z, C, T) :- subClass(Y, Z, C), instd(X, Y, C, T).
instd(X, Z, C, T) :- subConj(Y1, Y2, Z, C), instd(X, Y1, C, T), instd(X, Y2, C, T).
instd(X, Z, C, T) :- subEx(V, Y, Z, C), tripled(X, V, XP, C, T), instd(XP, Y, C, T).
tripled(X, R, X1, C, T) :- supEx(Y, R, X1, C), instd(X, Y, C, T).
instd(Y, Z1, C, T) :- supForall(Z, R, Z1, C), instd(X, Z, C, T), tripled(X, R, Y, C, T).
unsat(T) :- supLeqOne(Z, R, C), instd(X, Z, C, T), tripled(X, R, X1, C, T), tripled(X, R, X2, C, T), X1 != X2.
tripled(X, W, X1, C, T) :- subRole(V, W, C), tripled(X, V, X1, C, T).
tripled(X, W, Z, C, T) :- subRChain(U, V, W, C), tripled(X, U, Y, C, T), tripled(Y, V, Z, C, T).
unsat(T) :- dis(U, V, C), tripled(X, U, Y, C, T), tripled(X, V, Y, C, T).
tripled(Y, V, X, C, T) :- inv(U, V, C), tripled(X, U, Y, C, T).
tripled(Y, U, X, C, T) :- inv(U, V, C), tripled(X, V, Y, C, T).
unsat(T) :- irr(U, C), tripled(X, U, X, C, T).
 :- unsat("main").
insta("ind1", "notC1", "c1", "main").
insta("i_sfl1", "C12", "c1", "main").
subConj("C4", "notC4", "bot", "c1").
insta("strict", "AxiomType", "c1", "main").
ntriplea("i_spx1", "R5", "obj_ex", "c1").
triplea("i_sbx3", "R4", "i_sbx4", "c1", "main").
insta("ind2", "notC11", "c1", "main").
triplea("i_leq", "R7", "i_leq2", "c1", "main").
insta("i_sbx4", "C8", "c1", "main").
triplea("i_irr", "R18", "i_irr", "c1", "main").
insta("i_sbx1", "notC9", "c1", "main").
ntriplea("i_inv2", "R14", "i_inv1", "c1").
insta("i_sc", "C3", "c1", "main").
triplea("i_sr1", "R8", "i_sr2", "c1", "main").
subConj("C11", "notC11", "bot", "c1").
range("hasAttribute", "AttributeValue", "c1").
subConj("C7", "notC7", "bot", "c1").
insta("i_sc", "notC4", "c1", "main").
insta("defeasible", "AxiomType", "c1", "main").
triplea("i_src1", "R11", "i_src2", "c1", "main").
triplea("i_inv1", "R13", "i_inv2", "c1", "main").
ntriplea("i_src1", "R10", "i_src3", "c1").
triplea("i_npa1", "R3", "i_npa2", "c1", "main").
insta("i_scj", "notC7", "c1", "main").
triplea("i_leq", "R7", "i_leq1", "c1", "main").
insta("i_leq2", "C15", "c1", "main").
triplea("i_dis1", "R15", "i_dis2", "c1", "main").
insta("i_sfl2", "notC13", "c1", "main").
insta("i_scj", "C5", "c1", "main").
domain("hasAttribute", "Context", "c1").
insta("i_spx2", "C10", "c1", "main").
subConj("C9", "notC9", "bot", "c1").
ntriplea("ind2", "R1", "ind3", "c1").
triplea("i_src2", "R12", "i_src3", "c1", "main").
insta("i_spx1", "C10", "c1", "main").
range("hasModule", "Module", "c1").
insta("i_sbx2", "C8", "c1", "main").
triplea("i_sbx1", "R4", "i_sbx2", "c1", "main").
subConj("C1", "notC1", "bot", "c1").
insta("i_sfl3", "C12", "c1", "main").
domain("hasModule", "Context", "c1").
insta("i_scj", "C6", "c1", "main").
triplea("i_sfl3", "R6", "i_sfl4", "c1", "main").
insta("i_leq", "C14", "c1", "main").
triplea("i_sfl1", "R6", "i_sfl2", "c1", "main").
ntriplea("i_sr1", "R9", "i_sr2", "c1").
insta("i_leq1", "C15", "c1", "main").
subConj("C13", "notC13", "bot", "c1").
triplea("i_dis1", "R16", "i_dis2", "c1", "main").
nom("i_sbx3", "c1").
nom("i_sbx2", "c1").
nom("i_src3", "c1").
nom("i_sbx1", "c1").
nom("i_sbx4", "c1").
nom("i_sfl4", "c1").
nom("obj_ex", "c1").
nom("strict", "c1").
nom("i_sfl1", "c1").
nom("i_sfl2", "c1").
nom("i_src2", "c1").
nom("i_sfl3", "c1").
nom("i_src1", "c1").
nom("i_inv2", "c1").
nom("i_inv1", "c1").
nom("defeasible", "c1").
nom("i_leq", "c1").
nom("i_spx1", "c1").
nom("i_dis2", "c1").
nom("i_leq2", "c1").
nom("i_dis1", "c1").
nom("i_leq1", "c1").
nom("i_irr", "c1").
nom("ind2", "c1").
nom("ind3", "c1").
nom("i_spx2", "c1").
nom("ind1", "c1").
nom("i_sr2", "c1").
nom("i_scj", "c1").
nom("i_sr1", "c1").
nom("i_npa2", "c1").
nom("i_sc", "c1").
nom("i_npa1", "c1").
rol("R16", "c1").
rol("R18", "c1").
rol("hasModule", "c1").
rol("R4", "c1").
rol("hasAttribute", "c1").
rol("R3", "c1").
rol("R1", "c1").
rol("R8", "c1").
rol("R7", "c1").
rol("R6", "c1").
rol("R5", "c1").
rol("R9", "c1").
rol("R13", "c1").
rol("R12", "c1").
rol("R15", "c1").
rol("R14", "c1").
rol("R11", "c1").
rol("R10", "c1").
cls("notC11", "c1").
cls("notC13", "c1").
cls("C8", "c1").
cls("C9", "c1").
cls("C6", "c1").
cls("C7", "c1").
cls("Module", "c1").
cls("C4", "c1").
cls("C5", "c1").
cls("C3", "c1").
cls("AxiomType", "c1").
cls("notC1", "c1").
cls("C15", "c1").
cls("AttributeValue", "c1").
cls("notC4", "c1").
cls("notC9", "c1").
cls("notC7", "c1").
cls("C10", "c1").
cls("bot", "c1").
cls("C12", "c1").
cls("C11", "c1").
cls("C14", "c1").
cls("C13", "c1").
cls("C1", "c1").
cls("Context", "c1").
prec("c1", "g").
instd(X, B, C, T) :- subEval(A, C1, B, C), instd(CP, C1, G, T), instd(X, A, CP, T).
tripled(X, S, Y, C, T) :- subEvalR(R, C1, S, C), instd(CP, C1, G, T), tripled(X, R, Y, CP, T).
instd(X, Z, C, T) :- insta(X, Z, G, T), prec(C, G), not ovrInsta(X, Z, C).
tripled(X, R, Y, C, T) :- triplea(X, R, Y, G, T), prec(C, G), not ovrTriplea(X, R, Y, C).
unsat(T) :- ninsta(X, Z, G), instd(X, Z, C, T), prec(C, G), not ovrNinsta(X, Z, C).
unsat(T) :- ntriplea(X, R, Y, G), tripled(X, R, Y, C, T), prec(C, G), not ovrNtriplea(X, R, Y, C).
instd(X, Z, C, T) :- subClass(Y, Z, G), instd(X, Y, C, T), prec(C, G), not ovrSubClass(X, Y, Z, C).
instd(X, Z, C, T) :- subConj(Y1, Y2, Z, G), instd(X, Y1, C, T), instd(X, Y2, C, T), prec(C, G), not ovrSubConj(X, Y1, Y2, Z, C).
instd(X, Z, C, T) :- subEx(V, Y, Z, G), tripled(X, V, X1, C, T), instd(X1, Y, C, T), prec(C, G), not ovrSubEx(X, V, Y, Z, C).
tripled(X, R, X1, C, T) :- supEx(Y, R, X1, G), instd(X, Y, C, T), prec(C, G), not ovrSupEx(X, Y, R, X1, C).
instd(Y, Z1, C, T) :- supForall(Z, R, Z1, G), instd(X, Z, C, T), tripled(X, R, Y, C, T), prec(C, G), not ovrSupAll(X, Y, Z, R, Z1, C).
unsat(T) :- supLeqOne(Z, R, G), instd(X, Z, C, T), tripled(X, R, X1, C, T), tripled(X, R, X2, C, T), X1 != X2, prec(C, G), not ovrSupLeqOne(X, X1, X2, Z, R, C).
tripled(X, W, X1, C, T) :- subRole(V, W, G), tripled(X, V, X1, C, T), prec(C, G), not ovrSubRole(X, X1, V, W, C).
tripled(X, W, Z, C, T) :- subRChain(U, V, W, G), tripled(X, U, Y, C, T), tripled(Y, V, Z, C, T), prec(C, G), not ovrSubRChain(X, Y, Z, U, V, W, C).
unsat(T) :- dis(U, V, G), tripled(X, U, Y, C, T), tripled(X, V, Y, C, T), prec(C, G), not ovrDis(X, Y, U, V, C).
tripled(Y, V, X, C, T) :- inv(U, V, G), tripled(X, U, Y, C, T), prec(C, G), not ovrInv(X, Y, U, V, C).
tripled(X, U, Y, C, T) :- inv(U, V, G), tripled(Y, V, X, C, T), prec(C, G), not ovrInv(X, Y, U, V, C).
unsat(T) :- irr(U, G), tripled(X, U, X, C, T), prec(C, G), not ovrIrr(X, U, C).
ovrInsta(X, Y, C) :- def_insta(X, Y), prec(C, "g"), not test_fails(nlit(X, Y, C)).
ovrTriplea(X, R, Y, C) :- def_triplea(X, R, Y), prec(C, "g"), not test_fails(nrel(X, R, Y, C)).
ovrNinsta(X, Z, C) :- def_ninsta(X, Z), prec(C, "g"), instd(X, Z, C, "main").
ovrNtriplea(X, R, Y, C) :- def_ntriplea(X, R, Y), prec(C, "g"), tripled(X, R, Y, C, "main").
ovrSubClass(X, Y, Z, C) :- def_subclass(Y, Z), prec(C, "g"), instd(X, Y, C, "main"), not test_fails(nlit(X, Z, C)).
ovrSubConj(X, Y1, Y2, Z, C) :- def_subcnj(Y1, Y2, Z), prec(C, "g"), instd(X, Y1, C, "main"), instd(X, Y2, C, "main"), not test_fails(nlit(X, Z, C)).
ovrSubEx(X, R, Y, Z, C) :- def_subex(R, Y, Z), prec(C, "g"), tripled(X, R, W, C, "main"), instd(W, Y, C, "main"), not test_fails(nlit(X, Z, C)).
ovrSupEx(X, Y, R, W, C) :- def_supex(Y, R, W), prec(C, "g"), instd(X, Y, C, "main"), not test_fails(nrel(X, R, W, C)).
ovrSupAll(X, Y, Z, R, W, C) :- def_supforall(Z, R, W), prec(C, "g"), instd(X, Z, C, "main"), tripled(X, R, Y, C, "main"), not test_fails(nlit(Y, W, C)).
ovrSupLeqOne(X, X1, X2, Z, R, C) :- def_supleqone(Z, R), prec(C, "g"), instd(X, Z, C, "main"), tripled(X, R, X1, C, "main"), tripled(X, R, X2, C, "main"), X1 != X2.
ovrSubRole(X, Y, R, S, C) :- def_subr(R, S), prec(C, "g"), tripled(X, R, Y, C, "main"), not test_fails(nrel(X, S, Y, C)).
ovrSubRChain(X, Y, Z, R, S, T, C) :- def_subrc(R, S, T), prec(C, "g"), tripled(X, R, Y, C, "main"), tripled(Y, S, Z, C, "main"), not test_fails(nrel(X, T, Z, C)).
ovrDis(X, Y, R, S, C) :- def_dis(R, S), prec(C, "g"), tripled(X, R, Y, C, "main"), tripled(X, S, Y, C, "main").
ovrInv(X, Y, R, S, C) :- def_inv(R, S), prec(C, "g"), tripled(X, R, Y, C, "main"), not test_fails(nrel(Y, S, X, C)).
ovrInv(X, Y, R, S, C) :- def_inv(R, S), prec(C, "g"), tripled(Y, S, X, C, "main"), not test_fails(nrel(X, R, Y, C)).
ovrIrr(X, R, C) :- def_irr(R), prec(C, "g"), tripled(X, R, X, C, "main").
test(nlit(X, Y, C)) :- def_insta(X, Y), prec(C, "g").
 :- test_fails(nlit(X, Y, C)), ovrInsta(X, Y, C).
test(nrel(X, R, Y, C)) :- def_triplea(X, R, Y), prec(C, "g").
 :- test_fails(nrel(X, R, Y, C)), ovrTriplea(X, R, Y, C).
test(nlit(X, Z, C)) :- def_subclass(Y, Z), instd(X, Y, C, "main"), prec(C, "g").
 :- test_fails(nlit(X, Z, C)), ovrSubClass(X, Y, Z, C).
test(nlit(X, Z, C)) :- def_subcnj(Y1, Y2, Z), instd(X, Y1, C, "main"), instd(X, Y2, C, "main"), prec(C, "g").
 :- test_fails(nlit(X, Z, C)), ovrSubConj(X, Y1, Y2, Z, C).
test(nlit(X, Z, C)) :- def_subex(R, Y, Z), tripled(X, R, W, C, "main"), instd(W, Y, C, "main"), prec(C, "g").
 :- test_fails(nlit(X, Z, C)), ovrSubEx(X, V, Y, Z, C).
test(nrel(X, R, W, C)) :- def_supex(Y, R, W), instd(X, Y, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, R, W, C)), ovrSupEx(X, Y, R, W, C).
test(nlit(Y, W, C)) :- def_supforall(Z, R, W), instd(X, Z, C, "main"), tripled(X, R, Y, C, "main"), prec(C, "g").
 :- test_fails(nlit(Y, W, C)), ovrSupAll(X, Y, Z, R, W, C).
test(nrel(X, S, Y, C)) :- def_subr(R, S), tripled(X, R, Y, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, S, Y, C)), ovrSubRole(X, Y, R, S, C).
test(nrel(X, T, Z, C)) :- def_subrc(R, S, T), tripled(X, R, Y, C, "main"), tripled(Y, S, Z, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, T, Z, C)), ovrSubRChain(X, Y, Z, R, S, T, C).
test(nrel(Y, S, X, C)) :- def_inv(R, S), tripled(X, R, Y, C, "main"), prec(C, "g").
test(nrel(Y, R, X, C)) :- def_inv(R, S), tripled(X, S, Y, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, S, Y, C)), ovrInv(X, Y, R, S, C).
 :- test_fails(nrel(X, R, Y, C)), ovrInv(X, Y, R, S, C).
test_fails(nlit(X, Z, C)) :- instd(X, Z, C, nlit(X, Z, C)), not unsat(nlit(X, Z, C)).
test_fails(nrel(X, R, Y, C)) :- tripled(X, R, Y, C, nrel(X, R, Y, C)), not unsat(nrel(X, R, Y, C)).
instd(X, Z, C, nlit(X, Z, C)) :- test(nlit(X, Z, C)).
tripled(X, R, Y, C, nrel(X, R, Y, C)) :- test(nrel(X, R, Y, C)).
instd(X1, Y1, C, Z) :- instd(X1, Y1, C, "main"), test(Z).
tripled(X1, R, Y1, C, Z) :- tripled(X1, R, Y1, C, "main"), test(Z).
