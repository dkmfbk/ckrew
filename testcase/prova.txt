supEx("B", "hasModule", "mB", "g").
subRole("att1", "hasAttribute", "g").
triplea("c2", "hasModule", "m2", "g", "main").
insta("m1", "Module", "g", "main").
insta("c2", "Context", "g", "main").
subClass("D", "C", "g").
domain("hasAttribute", "Context", "g").
domain("hasModule", "Context", "g").
insta("m2", "Module", "g", "main").
triplea("c1", "hasModule", "m1", "g", "main").
insta("attv1", "AttributeValue", "g", "main").
insta("mB", "Module", "g", "main").
range("hasAttribute", "AttributeValue", "g").
insta("strict", "AxiomType", "g", "main").
subClass("B", "Context", "g").
range("hasModule", "Module", "g").
supEx("B", "att1", "attv1", "g").
insta("c1", "Context", "g", "main").
insta("defeasible", "AxiomType", "g", "main").
insta("c2", "B", "g", "main").
nom("m1", "g").
nom("c2", "g").
nom("c1", "g").
nom("mB", "g").
nom("strict", "g").
nom("attv1", "g").
nom("defeasible", "g").
nom("m2", "g").
rol("hasModule", "g").
rol("hasAttribute", "g").
rol("att1", "g").
cls("AxiomType", "g").
cls("AttributeValue", "g").
cls("C", "g").
cls("D", "g").
cls("Module", "g").
cls("B", "g").
cls("Context", "g").
instd(X, Z, C, T) :- insta(X, Z, C, T).
tripled(X, R, Y, C, T) :- triplea(X, R, Y, C, T).
unsat(T) :- ninsta(X, Z, C), instd(X, Z, C, T).
unsat(T) :- ntriplea(X, R, Y, C), tripled(X, R, Y, C, T).
unsat(T) :- eq(X, Y, C, T).
instd(X, "top", C, "main") :- nom(X, C).
unsat(T) :- instd(X, "bot", C, T).
instd(X, Z, C, T) :- subClass(Y, Z, C), instd(X, Y, C, T).
instd(X, Z, C, T) :- subConj(Y1, Y2, Z, C), instd(X, Y1, C, T), instd(X, Y2, C, T).
instd(X, Z, C, T) :- subEx(V, Y, Z, C), tripled(X, V, XP, C, T), instd(XP, Y, C, T).
tripled(X, R, X1, C, T) :- supEx(Y, R, X1, C), instd(X, Y, C, T).
instd(Y, Z1, C, T) :- supForall(Z, R, Z1, C), instd(X, Z, C, T), tripled(X, R, Y, C, T).
unsat(T) :- supLeqOne(Z, R, C), instd(X, Z, C, T), tripled(X, R, X1, C, T), tripled(X, R, X2, C, T), X1 != X2.
tripled(X, W, X1, C, T) :- subRole(V, W, C), tripled(X, V, X1, C, T).
tripled(X, W, Z, C, T) :- subRChain(U, V, W, C), tripled(X, U, Y, C, T), tripled(Y, V, Z, C, T).
unsat(T) :- dis(U, V, C), tripled(X, U, Y, C, T), tripled(X, V, Y, C, T).
tripled(Y, V, X, C, T) :- inv(U, V, C), tripled(X, U, Y, C, T).
tripled(Y, U, X, C, T) :- inv(U, V, C), tripled(X, V, Y, C, T).
unsat(T) :- irr(U, C), tripled(X, U, X, C, T).
 :- unsat("main").
insta("i_eq1", "C_4", "c1", "main").
supLeqOne("C_leq", "R_leq", "c1").
triplea("i_eq1", "R_1", "i_eq3", "c1", "main").
triplea("i_eq3", "R_1", "i_eq1", "c1", "main").
insta("i_all1", "C_all", "c1", "main").
insta("i_2", "C_2", "c1", "main").
subRole("R_2", "R_1", "c1").
domain("hasAttribute", "Context", "c1").
insta("i_4", "C_4", "c1", "main").
subClass("C_1", "D", "c1").
subEx("R_1", "C_4", "D", "c1").
triplea("i_inv1", "R_inv1", "i_inv2", "c1", "main").
insta("strict", "AxiomType", "c1", "main").
triplea("i_6", "R_4", "i_7", "c1", "main").
subRole("R_ev", "R_6", "c1").
subEvalR("R_5", "B", "R_6", "c1").
range("hasModule", "Module", "c1").
insta("i_1", "C_1", "c1", "main").
supForall("C_all", "R_all", "C_4", "c1").
insta("i_ex2", "C_ex2", "c1", "main").
eq("i_eq1", "i_eq2", "c1", "main").
subEval("D", "B", "D", "c1").
subClass("C_ev1", "D", "c1").
triplea("i_all1", "R_all", "i_all2", "c1", "main").
triplea("i_leq", "R_leq", "i_leq2", "c1", "main").
insta("i_leq2", "C_4", "c1", "main").
inv("R_inv2", "R_inv1", "c1").
insta("i_leq1", "C_4", "c1", "main").
triplea("i_3", "R_1", "i_4", "c1", "main").
ntriplea("i_npa1", "R_npa", "i_npa2", "c1").
triplea("i_dis1", "R_dis1", "i_dis2", "c1", "main").
insta("i_not", "C_not", "c1", "main").
domain("hasModule", "Context", "c1").
subRChain("R_3", "R_4", "R_1", "c1").
eq("i_eq4", "i_eq5", "c1", "main").
triplea("i_4", "R_2", "i_3", "c1", "main").
supEx("C_ex2", "R_ex", "obj_ex", "c1").
eq("i_eq5", "i_eq6", "c1", "main").
insta("i_2", "C_3", "c1", "main").
dis("R_dis1", "R_dis2", "c1").
triplea("i_leq", "R_leq", "i_leq1", "c1", "main").
range("hasAttribute", "AttributeValue", "c1").
insta("i_leq", "C_leq", "c1", "main").
insta("defeasible", "AxiomType", "c1", "main").
subConj("C_2", "C_3", "D", "c1").
irr("R_irr", "c1").
triplea("i_5", "R_3", "i_6", "c1", "main").
nom("obj_ex", "c1").
nom("strict", "c1").
nom("i_neq5", "c1").
nom("i_neq4", "c1").
nom("i_inv2", "c1").
nom("i_inv1", "c1").
nom("defeasible", "c1").
nom("i_leq", "c1").
nom("i_all1", "c1").
nom("i_leq2", "c1").
nom("i_dis2", "c1").
nom("i_not", "c1").
nom("i_all2", "c1").
nom("i_leq1", "c1").
nom("i_dis1", "c1").
nom("i_5", "c1").
nom("i_6", "c1").
nom("i_3", "c1").
nom("i_4", "c1").
nom("i_7", "c1").
nom("i_ex2", "c1").
nom("i_eq3", "c1").
nom("i_eq4", "c1").
nom("i_eq5", "c1").
nom("i_eq6", "c1").
nom("i_eq1", "c1").
nom("i_eq2", "c1").
nom("i_npa2", "c1").
nom("i_npa1", "c1").
nom("i_2", "c1").
nom("i_1", "c1").
rol("R_npa", "c1").
rol("R_4", "c1").
rol("R_ex", "c1").
rol("R_6", "c1").
rol("hasModule", "c1").
rol("hasAttribute", "c1").
rol("R_ev", "c1").
rol("R_inv2", "c1").
rol("R_inv1", "c1").
rol("R_all", "c1").
rol("R_2", "c1").
rol("R_3", "c1").
rol("R_1", "c1").
rol("R_irr", "c1").
rol("R_dis2", "c1").
rol("R_leq", "c1").
rol("R_dis1", "c1").
cls("C_not", "c1").
cls("C_ex2", "c1").
cls("C_4", "c1").
cls("C_3", "c1").
cls("C_leq", "c1").
cls("AttributeValue", "c1").
cls("D", "c1").
cls("Module", "c1").
cls("C_2", "c1").
cls("C_1", "c1").
cls("AxiomType", "c1").
cls("C_all", "c1").
cls("C_ev1", "c1").
cls("Context", "c1").
prec("c1", "g").
prec("c2", "g").
instd(X, B, C, T) :- subEval(A, C1, B, C), instd(CP, C1, G, T), instd(X, A, CP, T).
tripled(X, S, Y, C, T) :- subEvalR(R, C1, S, C), instd(CP, C1, G, T), tripled(X, R, Y, CP, T).
instd(X, Z, C, T) :- insta(X, Z, G, T), prec(C, G), not ovrInsta(X, Z, C).
tripled(X, R, Y, C, T) :- triplea(X, R, Y, G, T), prec(C, G), not ovrTriplea(X, R, Y, C).
unsat(T) :- ninsta(X, Z, G), instd(X, Z, C, T), prec(C, G), not ovrNinsta(X, Z, C).
unsat(T) :- ntriplea(X, R, Y, G), tripled(X, R, Y, C, T), prec(C, G), not ovrNtriplea(X, R, Y, C).
instd(X, Z, C, T) :- subClass(Y, Z, G), instd(X, Y, C, T), prec(C, G), not ovrSubClass(X, Y, Z, C).
instd(X, Z, C, T) :- subConj(Y1, Y2, Z, G), instd(X, Y1, C, T), instd(X, Y2, C, T), prec(C, G), not ovrSubConj(X, Y1, Y2, Z, C).
instd(X, Z, C, T) :- subEx(V, Y, Z, G), tripled(X, V, X1, C, T), instd(X1, Y, C, T), prec(C, G), not ovrSubEx(X, V, Y, Z, C).
tripled(X, R, X1, C, T) :- supEx(Y, R, X1, G), instd(X, Y, C, T), prec(C, G), not ovrSupEx(X, Y, R, X1, C).
instd(Y, Z1, C, T) :- supForall(Z, R, Z1, G), instd(X, Z, C, T), tripled(X, R, Y, C, T), prec(C, G), not ovrSupAll(X, Y, Z, R, Z1, C).
unsat(T) :- supLeqOne(Z, R, G), instd(X, Z, C, T), tripled(X, R, X1, C, T), tripled(X, R, X2, C, T), X1 != X2, prec(C, G), not ovrSupLeqOne(X, X1, X2, Z, R, C).
tripled(X, W, X1, C, T) :- subRole(V, W, G), tripled(X, V, X1, C, T), prec(C, G), not ovrSubRole(X, X1, V, W, C).
tripled(X, W, Z, C, T) :- subRChain(U, V, W, G), tripled(X, U, Y, C, T), tripled(Y, V, Z, C, T), prec(C, G), not ovrSubRChain(X, Y, Z, U, V, W, C).
unsat(T) :- dis(U, V, G), tripled(X, U, Y, C, T), tripled(X, V, Y, C, T), prec(C, G), not ovrDis(X, Y, U, V, C).
tripled(Y, V, X, C, T) :- inv(U, V, G), tripled(X, U, Y, C, T), prec(C, G), not ovrInv(X, Y, U, V, C).
tripled(X, U, Y, C, T) :- inv(U, V, G), tripled(Y, V, X, C, T), prec(C, G), not ovrInv(X, Y, U, V, C).
unsat(T) :- irr(U, G), tripled(X, U, X, C, T), prec(C, G), not ovrIrr(X, U, C).
ovrInsta(X, Y, C) :- def_insta(X, Y), prec(C, "g"), not test_fails(nlit(X, Y, C)).
ovrTriplea(X, R, Y, C) :- def_triplea(X, R, Y), prec(C, "g"), not test_fails(nrel(X, R, Y, C)).
ovrNinsta(X, Z, C) :- def_ninsta(X, Z), prec(C, "g"), instd(X, Z, C, "main").
ovrNtriplea(X, R, Y, C) :- def_ntriplea(X, R, Y), prec(C, "g"), tripled(X, R, Y, C, "main").
ovrSubClass(X, Y, Z, C) :- def_subclass(Y, Z), prec(C, "g"), instd(X, Y, C, "main"), not test_fails(nlit(X, Z, C)).
ovrSubConj(X, Y1, Y2, Z, C) :- def_subcnj(Y1, Y2, Z), prec(C, "g"), instd(X, Y1, C, "main"), instd(X, Y2, C, "main"), not test_fails(nlit(X, Z, C)).
ovrSubEx(X, R, Y, Z, C) :- def_subex(R, Y, Z), prec(C, "g"), tripled(X, R, W, C, "main"), instd(W, Y, C, "main"), not test_fails(nlit(X, Z, C)).
ovrSupEx(X, Y, R, W, C) :- def_supex(Y, R, W), prec(C, "g"), instd(X, Y, C, "main"), not test_fails(nrel(X, R, W, C)).
ovrSupAll(X, Y, Z, R, W, C) :- def_supforall(Z, R, W), prec(C, "g"), instd(X, Z, C, "main"), tripled(X, R, Y, C, "main"), not test_fails(nlit(Y, W, C)).
ovrSupLeqOne(X, X1, X2, Z, R, C) :- def_supleqone(Z, R), prec(C, "g"), instd(X, Z, C, "main"), tripled(X, R, X1, C, "main"), tripled(X, R, X2, C, "main"), X1 != X2.
ovrSubRole(X, Y, R, S, C) :- def_subr(R, S), prec(C, "g"), tripled(X, R, Y, C, "main"), not test_fails(nrel(X, S, Y, C)).
ovrSubRChain(X, Y, Z, R, S, T, C) :- def_subrc(R, S, T), prec(C, "g"), tripled(X, R, Y, C, "main"), tripled(Y, S, Z, C, "main"), not test_fails(nrel(X, T, Z, C)).
ovrDis(X, Y, R, S, C) :- def_dis(R, S), prec(C, "g"), tripled(X, R, Y, C, "main"), tripled(X, S, Y, C, "main").
ovrInv(X, Y, R, S, C) :- def_inv(R, S), prec(C, "g"), tripled(X, R, Y, C, "main"), not test_fails(nrel(Y, S, X, C)).
ovrInv(X, Y, R, S, C) :- def_inv(R, S), prec(C, "g"), tripled(Y, S, X, C, "main"), not test_fails(nrel(X, R, Y, C)).
ovrIrr(X, R, C) :- def_irr(R), prec(C, "g"), tripled(X, R, X, C, "main").
test(nlit(X, Y, C)) :- def_insta(X, Y), prec(C, "g").
 :- test_fails(nlit(X, Y, C)), ovrInsta(X, Y, C).
test(nrel(X, R, Y, C)) :- def_triplea(X, R, Y), prec(C, "g").
 :- test_fails(nrel(X, R, Y, C)), ovrTriplea(X, R, Y, C).
test(nlit(X, Z, C)) :- def_subclass(Y, Z), instd(X, Y, C, "main"), prec(C, "g").
 :- test_fails(nlit(X, Z, C)), ovrSubClass(X, Y, Z, C).
test(nlit(X, Z, C)) :- def_subcnj(Y1, Y2, Z), instd(X, Y1, C, "main"), instd(X, Y2, C, "main"), prec(C, "g").
 :- test_fails(nlit(X, Z, C)), ovrSubConj(X, Y1, Y2, Z, C).
test(nlit(X, Z, C)) :- def_subex(R, Y, Z), tripled(X, R, W, C, "main"), instd(W, Y, C, "main"), prec(C, "g").
 :- test_fails(nlit(X, Z, C)), ovrSubEx(X, V, Y, Z, C).
test(nrel(X, R, W, C)) :- def_supex(Y, R, W), instd(X, Y, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, R, W, C)), ovrSupEx(X, Y, R, W, C).
test(nlit(Y, W, C)) :- def_supforall(Z, R, W), instd(X, Z, C, "main"), tripled(X, R, Y, C, "main"), prec(C, "g").
 :- test_fails(nlit(Y, W, C)), ovrSupAll(X, Y, Z, R, W, C).
test(nrel(X, S, Y, C)) :- def_subr(R, S), tripled(X, R, Y, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, S, Y, C)), ovrSubRole(X, Y, R, S, C).
test(nrel(X, T, Z, C)) :- def_subrc(R, S, T), tripled(X, R, Y, C, "main"), tripled(Y, S, Z, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, T, Z, C)), ovrSubRChain(X, Y, Z, R, S, T, C).
test(nrel(Y, S, X, C)) :- def_inv(R, S), tripled(X, R, Y, C, "main"), prec(C, "g").
test(nrel(Y, R, X, C)) :- def_inv(R, S), tripled(X, S, Y, C, "main"), prec(C, "g").
 :- test_fails(nrel(X, S, Y, C)), ovrInv(X, Y, R, S, C).
 :- test_fails(nrel(X, R, Y, C)), ovrInv(X, Y, R, S, C).
test_fails(nlit(X, Z, C)) :- instd(X, Z, C, nlit(X, Z, C)), not unsat(nlit(X, Z, C)).
test_fails(nrel(X, R, Y, C)) :- tripled(X, R, Y, C, nrel(X, R, Y, C)), not unsat(nrel(X, R, Y, C)).
instd(X, Z, C, nlit(X, Z, C)) :- test(nlit(X, Z, C)).
tripled(X, R, Y, C, nrel(X, R, Y, C)) :- test(nrel(X, R, Y, C)).
instd(X1, Y1, C, Z) :- instd(X1, Y1, C, "main"), test(Z).
tripled(X1, R, Y1, C, Z) :- tripled(X1, R, Y1, C, "main"), test(Z).
