supNot("notExHasCourse", "ExHasCourse").
supEx("ExHasCourse", "hasCourse", "aux-ExHasCourse-hasCourse").
insta("bob", "PhDStudent").
subClass("Professor", "DeptMember").
insta("alice", "Professor").
subEx("hasCourse", "ExHasCourse").
def_subclass("DeptMember", "ExHasCourse").
subClass("PhDStudent", "DeptMember").
subClass("PhDStudent", "notExHasCourse").
nom("bob").
nom("alice").
rol("hasCourse").
cls("top").
cls("PhDStudent").
cls("ExHasCourse").
cls("DeptMember").
cls("notExHasCourse").
cls("Professor").
const("aux-ExHasCourse-hasCourse").
const("bob").
const("alice").
first("aux-ExHasCourse-hasCourse").
next("aux-ExHasCourse-hasCourse", "bob").
next("bob", "alice").
last("alice").
instd(X, Z) :- insta(X, Z).
tripled(X, R, Y) :- triplea(X, R, Y).
instd(X, Z) :- subClass(Y, Z), instd(X, Y).
-instd(X, Z) :- supNot(Y, Z), instd(X, Y).
instd(X, Z) :- subEx(V, Z), tripled(X, V, XP).
tripled(X, R, X1) :- supEx(Y, R, X1), instd(X, Y).
tripled(X, W, X1) :- subRole(V, W), tripled(X, V, X1).
-tripled(X, V, Y) :- dis(U, V), tripled(X, U, Y).
-tripled(X, U, Y) :- dis(U, V), tripled(X, V, Y).
tripled(Y, V, X) :- inv(U, V), tripled(X, U, Y).
tripled(Y, U, X) :- inv(U, V), tripled(X, V, Y).
-tripled(X, U, X) :- irr(U), const(X).
-tripled(X, R, Y) :- ntriplea(X, R, Y).
-instd(X, Y) :- subClass(Y, Z), -instd(X, Z).
instd(X, Y) :- supNot(Y, Z), -instd(X, Z).
-tripled(X, V, XP) :- subEx(V, Z), const(XP), -instd(X, Z).
-instd(X, Y) :- supEx(Y, R, X1), const(X), allNRel(X, R).
-tripled(X, V, X1) :- subRole(V, W), -tripled(X, W, X1).
-tripled(Y, V, X) :- inv(U, V), -tripled(X, U, Y).
-tripled(Y, U, X) :- inv(U, V), -tripled(X, V, Y).
allNRelStep(X, R, Y) :- first(Y), -tripled(X, R, Y).
allNRelStep(X, R, Y) :- allNRelStep(X, R, YP), next(YP, Y), -tripled(X, R, Y).
allNRel(X, R) :- last(Y), allNRelStep(X, R, Y).
instd(X, Z) :- def_subclass(Y, Z), instd(X, Y), not ovrSubClass(X, Y, Z).
-instd(X, Y) :- def_subclass(Y, Z), -instd(X, Z), not ovrSubClass(X, Y, Z).
tripled(X, W, X1) :- def_subr(V, W), tripled(X, V, X1), not ovrSubRole(X, X1, V, W).
-tripled(X, V, X1) :- def_subr(V, W), -tripled(X, W, X1), not ovrSubRole(X, X1, V, W).
tripled(Y, V, X) :- def_inv(U, V), tripled(X, U, Y), not ovrInv(X, Y, U, V).
tripled(X, U, Y) :- def_inv(U, V), tripled(Y, V, X), not ovrInv(X, Y, U, V).
-tripled(X, U, X) :- def_irr(U), const(X), not ovrIrr(X, U).
-tripled(Y, V, X) :- def_inv(U, V), -tripled(X, U, Y), not ovrInv(X, Y, U, V).
-tripled(X, U, Y) :- def_inv(U, V), -tripled(Y, V, X), not ovrInv(X, Y, U, V).
ovrSubClass(X, Y, Z) :- def_subclass(Y, Z), instd(X, Y), -instd(X, Z).
ovrSubRole(X, Y, R, S) :- def_subr(R, S), tripled(X, R, Y), -tripled(X, S, Y).
ovrInv(X, Y, R, S) :- def_inv(R, S), tripled(X, R, Y), -tripled(Y, S, X).
ovrInv(X, Y, R, S) :- def_inv(R, S), tripled(Y, S, X), -tripled(X, R, Y).
ovrIrr(X, R) :- def_irr(R), tripled(X, R, X).
